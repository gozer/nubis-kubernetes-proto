apiVersion: kops/v1alpha2
kind: Cluster
metadata:
  creationTimestamp: 2017-12-19T14:52:42Z
  name: ${CLUSTER}
spec:
#  egressProxy:
#    httpProxy:
#      host: proxy.service.consul
#      port: 3128
#    excludes: localhost,127.0.0.1,.localdomain,.service.consul,service.consul,.consul,consul,169.254.169.254,100.64.
  api:
    loadBalancer:
      type: Internal
  authorization:
    rbac: {}
  channel: stable
  cloudProvider: aws
  configBase: s3://${BUCKET}
  etcdClusters:
  - etcdMembers:
    - encryptedVolume: true
      instanceGroup: master-${element(split(",",AVAILABILITY_ZONES), 0)}
      name: "1"
    - encryptedVolume: true
      instanceGroup: master-${element(split(",",AVAILABILITY_ZONES), 1)}
      name: "2"
    - encryptedVolume: true
      instanceGroup: master-${element(split(",",AVAILABILITY_ZONES), 2)}
      name: "3"
    name: main
  - etcdMembers:
    - encryptedVolume: true
      instanceGroup: master-${element(split(",",AVAILABILITY_ZONES), 0)}
      name: "1"
    - encryptedVolume: true
      instanceGroup: master-${element(split(",",AVAILABILITY_ZONES), 1)}
      name: "2"
    - encryptedVolume: true
      instanceGroup: master-${element(split(",",AVAILABILITY_ZONES), 2)}
      name: "3"
    name: events
  iam:
    allowContainerRegistry: true
    legacy: false
  kubernetesApiAccess:
  - 0.0.0.0/0
  kubernetesVersion: 1.8.4
  masterPublicName: api.${CLUSTER}
  networkCIDR: ${NETWORK_CIDR}
  networking:
    calico: {}
  nonMasqueradeCIDR: 100.64.0.0/10
  sshAccess:
  - 0.0.0.0/0
  topology:
    dns:
      type: Public
    masters: private
    nodes: private
